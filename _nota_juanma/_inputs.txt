
// GENERACION LISTA COMANDOS 

hola < cara | "$HOME" >> caracola | "$HOME" << heredoc

// INPUTS
"cat  ho"la a'$e" ta'l   ,qu'e" hac"$"es
  cmd1 'literal' > O  "hola x" 1234 | cmd2 << H 
 'ho<<$la' 'cara<>|cola' '' 'ey ' 
 "ho<< $? la" "car$a<>|cola" ' ey'

// WORDS TOKENS
h"ola $HOME "caracola
h"ola $HOME "caracola | valgrind --leak-check=full ./minishell
aa > aa >> bb << bb < cc 

// EXPANSION VARIABLES 
aa"$HOME"zz   bb"$?"yy   cc"\$literal"  "${HOME}xxx"ww
"aa $HOME $? bb \$literal ${HOME}xxx zz"
'aa $HOME bb \$literal ${HOME}xxx $?z zz'

// EXPANSION -> CASO LITERALES
cc"\$literal"			-> cc$literal
" aa"\$a\$b"xx "		-> aa$a$b
dd"\\$USER"				-> dd\$USER
ee"\"\$test\""			-> ee"$test"

# EXPANSION ->  2 VARIABLES CONSECUTIVAS
$HOME$SHELL
"zz$HOME$SHELL  xx"
$SHELL$TERM
$SHELL$XXXX

$HOME=la

// CASOS ESPECIALES
'$ ' o '$"' '$
"aa$HOMEzz $ $"
caso especial '$?'
"$  $HOME"

"$ff{HOME}ff" -> {HOME}ff

## ERROR SINTAXIS
'test ey
"test ey
cmd1 'test | "test
"Hola '$USER'" 
|hola | caravol

####  TESTEO 

# Test básico
echo "echo hello" | valgrind --leak-check=full ./minishell

# Test expansion
echo "$HOME" "$?" "\$literal" "${HOME}xxx" | valgrind --leak-check=full ./minishell
echo "aa $HOME $? bb \$literal ${HOME}xxx zz" | valgrind --leak-check=full ./minishell

#Test Patrick
echo "cat ho"la' a'$e" tal'l   ,qu'e" hac"e"s | valgrind --leak-check=full ./minishell

input  ->  "cat ho"la' a'$USER" tal'l   ,qu'e" hac"e"s
output ->  [cat hola a tal'l   ,qu'e] [haces]

# Test busqueda expansion variable con environment -> 2 variables casi coincidentes -> $USER vs USER_ZDOTDIR
$USER 

# Test no encuentra variable en environment
input  ->  xx"aaa$ezzz"xx
output ->  xxaaaxx

# ejecucion test parser con valgrind ¡¡¡¡
valgrind --tool=memcheck --leak-check=full --track-origins=yes ./minishell --test